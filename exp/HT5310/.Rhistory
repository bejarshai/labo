tabla3_pre
tabla3_post
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt_cat(ncpre)
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(npost)
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
tabla4_post
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
tabla4_post
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
tabla4_post
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
print()
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
print( )
library(fdth) # distrucion de frecuencias absolutas, relativas, porcentuales
tabla4_pre <-fdt(ncpre)
tabla4_post <- fdt(ncpost)
tabla4_pre
tabla4_post
# Histograma
hist(c(ncpre, ncpost), main = "Histograma de la variable Ruido", col = "cyan", xlab = "Intervalos", ylab = "Frecuencia")
# Histograma
hist(ncpre, ncpost, main = "Histograma de la variable Ruido", col = "cyan", xlab = "Intervalos", ylab = "Frecuencia")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = "pink", xlab="Niveles de Ruido dB")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = "rainbow", xlab="Niveles de Ruido dB")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = c("rainbow"), xlab="Niveles de Ruido dB")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = C("pink","blue"), xlab="Niveles de Ruido dB")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = "pink","blue", xlab="Niveles de Ruido dB")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = c("pink","blue"), xlab="Niveles de Calcio")
boxplot(ncpre, ncpost, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = c("pink","blue"), xlab="Niveles de Calcio", names = c("pre-d","post-d"))
boxplot(ncpre, ncpost, plot=FALSE)$out
#Cargo Datos
cant_creat <- c(1.51,1.76,2.29,1.66,1.57,1.52,1.73,1.65,1.08,1.22,1.80,1.69,1.61,1.46,1.72,1.47,1.62,1.58,1.36,1.33,1.66,1.55,1.58,1.66,1.69,1.22,1.33,1.23,1.53,1.56,2.00,1.96,2.34,1.43,1.86,1.90,1.49,1.52,1.54,1.38,1.68,1.83,1.54,1.60,1.43,1.58,1.66,1.81,1.67,1.26,1.75,1.59,1.40,1.65,1.56,1.47,1.50,1.73,1.59,1.60,2.18,1.37,1.51,1.71,1.47,1.57,1.47,1.86,1.40,1.83,1.68,1.89,1.46,1.43,1.49,1.15,1.40,1.31,1.44,1.52,1.83,1.86,2.02,1.46)
cant_creat
stem(cant_creat)
library(fdth)
dist <- fdt(cant_creat,start=0, end= 3)
dist
plot <- hist(cant_creat)
summary(cant_creat)
# Moda
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(cant_creat)
# Cuantiles
quantile(cant_creat)
# Rango
rango <- range(cant_creat)
rango
# Desviación estandar
sd(cant_creat)
# Varianza muestral
var(cant_creat)
# Coeficiente de variación
CV = (sd(cant_creat)/mean(cant_creat))*100
CV
# Rango Intercuartílico
IQR(cant_creat)
knitr::opts_chunk$set(echo = TRUE)
#Cargo datos
picom <- c(57,58,60,58,61,62,61,59,57,63,58,55,59,60)
picoh <- c(55,56,58,54,53,55,57,53,54,54,55,55)
picom
picoh
library(fBasics)
qqnormPlot(picom, picoh)
library(fBasics)
qqnormPlot(picom)
qqnormPlot(picoh)
#Distribucion Normal
shapiro.test(picom)
shapiro.test(picoh)
#Calculo IC
t.test(picom)$conf.int
t.test(picoh)$conf.int
#Calculo IC
t.test(picom, conf.level = 0.99)$conf.int
t.test(picoh, conf.level = 0.99)$conf.int
t.test(x= picom, y= picoh, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.99)
t.test(x= picom, y= picoh, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.99)
#Cargo datos
nprevio <- c(182,230,160,200,160,240,260,480,263,240)
npost <- c(190,220,166,150,140,220,156,312,240,250)
nprevio
npost
#Distribucion Normal
shapiro.test(nprevio)
shapiro.test(npost)
library(fBasics)
qqnormPlot(nprevio)
qqnormPlot(npost)
t.test(x= nprevio, y= npost, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.95)
#Cargo datos
kglana_ant <- c(10,8,7,5,9,12,10,9,8,8)
kglana_desp <- c(10,9,9,7,10,12,11,12,11,10)
kglana_ant
kglana_desp
#Distribucion Normal
shapiro.test(kglana_ant)
shapiro.test(kglana_desp)
#Distribucion Normal
shapiro.test(kglana_ant)
shapiro.test(kglana_desp)
t.test(x= kglana_ant, y= kglana_desp, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.98)
#Cargo datos
terr_fert <- c(1024,1216,1312,1280,1216,1312,992,1120)
terr_cont <- c(1104,1072,1088,1328,1376,1280,1120,1200)
boxplot(terr_fert, terr_cont, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = c("pink","blue"), xlab="Arboles x Ha", names = c("con fert","control"))
boxplot(terr_fert, terr_cont, main = "Diagrama de caja de dispersión", horizontal = TRUE, col = c("pink","blue"), xlab="Arboles x Ha", names = c("con fert","control"))
t.test(x= terr_fert, y= terr_cont, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.95)
#Distribucion Normal
shapiro.test(terr_fert)
shapiro.test(terr_cont)
summary(terr_cont)
summary(terr_fert)
#Distribucion Normal
shapiro.test(terr_fert)
shapiro.test(terr_cont)
#Datos
kgfardo <- c(28.3,27.8,29.3,30.1,32.5,27.2,25.3,32.2,33.6,30.7)
library(dplyr)
glimpse(muestrasNT)
#Cargo datos
muestrasNT <- c(9.69,30.75,49.98,66.14,103.61,143.75,312.45,1529.35,13.16,31.54,50.06,67.68,106.28,149.64,352.09,17.09,35.07,55.02,81.40,106.80,167.79,371.47,18.12,36.99,57.00,90.80,108.69,182.50,444.68,23.70,40.32,58.41,92.17,114.61,192.55,460.86,24.07,42.51,61.31,92.42,120.86,193.53,563.92,24.29,45.64,64.25,100.82,124.54,271.57,690.11,26.43,48.22,65.24,101.94,143.27,292.61,826.54)
muestrasNT
library(dplyr)
glimpse(muestrasNT)
# Desviación estandar
sd(kgfardo)
# Varianza muestral
var(kgfardo)
t.test(x= terr_fert, y= terr_cont, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.90)
t.test(kgfardo, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.90)
#Datos
AlA <- c(0.14,0.138,0.143,0.142,0.144,0.137)
AlB <- c(0.135,0.14,0.136,0.142,0.138,0.14)
#Distribucion Normal
shapiro.test(AlA)
shapiro.test(AlB)
t.test(x= AlA, y= AlB, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.90)
knitr::opts_chunk$set(echo = TRUE)
#Datos
mujnof <- c(0,97,0,72,1,0,81,0,62,1,32,1,24,0,99,0,9,0,74,0,88,0,94,1,16,0,86,0,85,0,58,0,57,0,64,0,98,1,09,0,92,0,78,1,24,1,18)
mujf <- c(0,48,0,71,0,98,0,68,1,18,1,36,0,78,1,64)
muj_embarazadas <- data.frame(condicion = factor(c(rep("No_fum",24),rep("fum",8))),
mlacido = c(mujnof,mujf))
muj_embarazadas <- data.frame(Condicion = factor(c(rep("No_fum",24),rep("fum",8))),Valores = c(mujnof,mujf))
#Datos
mujnof <- c(0,97,0,72,1,0,81,0,62,1,32,1,24,0,99,0,9,0,74,0,88,0,94,1,16,0,86,0,85,0,58,0,57,0,64,0,98,1,09,0,92,0,78,1,24,1,18)
mujf <- c(0,48,0,71,0,98,0,68,1,18,1,36,0,78,1,64)
mujnof
mujf
mujeres <- data.frame(Condicion = factor(c(rep("No_fum",24),rep("fum",8))),Valores = c(mujnof,mujf))
#Datos
mujnof <- c(0.97,0.72,1,0.81,0.62,1.32,1.24,0.99,0.9,0.74,0.88,0.94,1.16,0.86,0.85,0.58,0.57,0.64,0.98,1.09,0.92,0.78,1.24,1.18)
mujf <- c(0.48,0.71,0.98,0.68,1.18,1.36,0.78,1.64)
mujnof
mujf
mujeres <- data.frame(Condicion = factor(c(rep("No_fum",24),rep("fum",8))),Valores = c(mujnof,mujf))
muj_embarazadas
mujeres <- data.frame(Condicion = factor(c(rep("No_fum",24),rep("fum",8))),Valores = c(mujnof,mujf))
mujeres
shapiro.test(mujnof)
shapiro.test(mujf)
#Grafico comparativo
boxplot(mujnof, mujf, main = "Diagrama de Cajas", horizontal =TRUE, xlab = "mlacido", col = c("green", "red"), names = c("nof", "f"))
boxplot(mujnof, mujf, plot=FALSE)$out
t.test(mujnof, mujf, paired = FALSE, var.equal = FALSE)
t.test(mujnof, mujf, paired = FALSE, var.equal = FALSE)
t.test(mujnof, mujf, paired = FALSE, var.equal = FALSE)
# densidad en organismos/m2
est1 <- c(5030,13700,10730,11400,8.60,2200,4250,15040,4980,11910,8130,26850,17660,22800,1130,1690)
est2 <- c(2800,4670,6890,7720,7030,7330,2810,1330,3320,1230,2130,2190)
est1
est2
estaciones <- data.frame(Numero = factor(c(rep("1",16),rep("2",12))),Valores = c(est1, est2))
estaciones
shapiro.test(est1)
shapiro.test(est2)
#Grafico comparativo
boxplot(est1,est2, main = "Diagrama de Cajas", horizontal =TRUE, xlab = "organismos/m2", col = c("green", "red"), names = c("est 1", "est 2"))
#Grafico
library(fBasics)
qqnormPlot(est1, est2)
qqline(est1, est2)
#Grafico
library(fBasics)
qqnormPlot(est1)
qqnormPlot(est2)
qqline(est1)
qqline(est2)
#Grafico comparativo
boxplot(est1,est2, main = "Diagrama de Cajas", horizontal =TRUE, xlab = "organismos/m2", col = c("green", "red"), names = c("est 1", "est 2"))
boxplot(est1, est2, plot=FALSE)$out
#Grafico
library(fBasics)
qqnormPlot(est1)
qqnormPlot(est2)
qqline(est1)
qqline(est2)
t.test(est1, est2, paired = FALSE, var.equal = FALSE)
knitr::opts_chunk$set(echo = TRUE)
t.test(x= kglana_ant, y= kglana_desp, paired = TRUE, alternative = "two.sided", mu = 0, var.equal = TRUE, conf.level = 0.98)
t.test(x= nprevio, y= npost, alternative = "two.sided", paired = TRUE, mu = 0, var.equal = TRUE, conf.level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
#Datos
mrx <- c(2,2,2.3,2.1,2.4)
mqca <- c(2.2,1.9,2.5,2.3,2.4)
muestras <- data.frame(Muestra = factor(c(rep("RX",5),rep("Qca",5))),Valores = c(mrx, mqca))
muestras
shapiro.test(mrx)
shapiro.test(mqca)
library(car)
leveneTest(Valores~Muestra, data = muestras) #mayor robustez
t.test(mrx, mqca,
paired = TRUE,
conf.level = 0.95, #grado de confianza
var.equal = TRUE, #suponemos varianzas iguales (homocedasticidad)
mu=0)
t.test(mrx, mqca,
paired = TRUE,
conf.level = 0.95, #grado de confianza
var.equal = TRUE, #suponemos varianzas iguales (homocedasticidad)
mu=0)
act.17=function(v){
print(paste("la longitud es",length(v)))
print(paste("la cantidad de NA es", sum(is.na(v))))
print(paste("la media es", mean(na.omit(v))))
print(paste("el desvío estándar es",sd(na.omit(v))))
print(paste("la varianza es",var(na.omit(v))))
print(paste("el error estándar muestral es",sd(na.omit(v))/sqrt(length(v))))
print(paste("la mediana es",median(na.omit(v))))
print(paste("el primer cuartil es",quantile(v,probs=c(0.25),na.rm=T)))
print(paste("el tercer cuartil es",quantile(v,probs=c(0.75),na.rm=T)))
print(paste("el rango es",max(na.omit(v))-min(na.omit(v))))
print(paste("el resultado de Shapiro Wilks es",shapiro.test(v)[1]))
print(paste("el p-valor de Shapiro Wilks es",shapiro.test(v)[2]))
}
a=c(5,3,7,8,5,10)
act.17(a)
c1 <- c(1,2)
c2 <- c(2,2,4,5)
c3 <- c(1,2,3,4,5,6,7)
vectores(c1,c2,c3)
vectores <- function(c1,c2,c3){
cat(act.17(c1)"\n",act.17(c2)"\n",act.17(c3)"\n")
}
vectores = function(c1,c2,c3)
{
cat(act.17(c1)"\n",act.17(c2)"\n",act.17(c3)"\n")
}
vectores = function(c1,c2,c3)
{
cat(act.17(c1)\n,act.17(c2)\n,act.17(c3)\n)
}
vectores = function(c1,c2,c3)
{
cat(act.17(c1),act.17(c2),act.17(c3))
}
vectores(c1,c2,c3)
shapiro.test(c1)
vectores(a,c2,c3)
vectores = function(c1,c2,c3)
{
cat(act.17(c1),act.17(c2),act.17(c3),'\n')
}
vectores(a,c2,c3,)
vectores(a,c2,c3)
vectores = function(c1,c2,c3)
{
cat(act.17(c1),'\n',act.17(c2),'\n',act.17(c3),'\n')
}
vectores(a,c2,c3)
predict(m, future)
library(prophet)
df <- read.csv('https://github.com/gumdropsteve/datasets/raw/master/views.csv')
names(df) <- c('ds', 'y')
m <- prophet(df)
future <- make_future_dataframe(m, periods=365)
predict(m, future)
m <- prophet(df)
library(prophet)
df <- read.csv('https://github.com/gumdropsteve/datasets/raw/master/views.csv')
names(df) <- c('ds', 'y')
m <- prophet(df)
future <- make_future_dataframe(m, periods=365)
predict(m, future)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Prophet)
install.packages('prophet')
library(prophet)
df <- read.csv('https://github.com/gumdropsteve/datasets/raw/master/views.csv')
names(df) <- c('ds', 'y')
m <- prophet(df)
m <- fbprophet(df)
library(fbprophet)
install.packages('fbprophet')
t<- c(14,25)
no.t <- c(159,152)
datos <- rbind(t,no.t)
datos
colnames(datos, "F", "M")
datos
datos <- colnames("F", "M")
colnames(datos) <- c("F","M")
datos
sum.filas <- apply(datos,1,sum)
sum.filas
datos/sum.filas
table(datos)
datos
table(datos)
sum.cols <- apply(datos,2,sum)
sum.cols <- apply(datos,2,sum)
rel.filas <- datos/sum.filas
rel.cols <- datos/sum.cols
rel.filas
rel.cols
mosaicplot(rel.filas,rel.cols)
mosaicplot(datos)
mosaicplot(datos)
mosaicplot?
x <- c(1,2,3,4,5,6,7,8) # devuelve los enteros de 1 a 6
chisq.test(datos)
test_1 <- chisq.test(datos)
test_1
test_1$observed
summary(test_1)
test_1$expected
n <- c(20,18,12,17,67)
s <- c(6,22,15,13,56)
e <- c(4,6,14,11,35,)
o <- c(10,19,23,40,92)
n <- c(20,18,12,17,67)
s <- c(6,22,15,13,56)
e <- c(4,6,14,11,35)
o <- c(10,19,23,40,92)
rbind(n,s,e,)
rbind(n,s,e,o)
datos2 <- rbind(n,s,e,o)
datos2
colnames(datos2)<-c("A","B","C","D","E")
datos2
sum.filas2 <- apply(datos2,1,sum)
sum.cols2 <- apply(datos2,2,sum)
sum.filas2
sum.cols2
anova.datos2 = aov(sum.filas2 ~ sum.cols2, data=datos2)
test_2 <- chisq.test(datos2)
test_2
test_2 <- chisq.test(datos2)
qchisq(0.99,datos2)
qchisq(0.99,test_2)
qchisq(0.99,datos2)
qchisq(0.99,12)
fisher.test(datos2)
prop.table(datos2)
e.n <- c(37, 1334)
e.p <- c(11,223)
datos3 <- rbind(e.n,e.p)
datos3
colnames(datos3) <- c("c.a","s.a")
datos3
prop.table(datos3)
prop.table(datos3)*100
round(prop.table(datos3)*100,2)
test_3 <- chisq.test(datos3)
test_3
sin.cint <- c(13827,2642, 1871, 4840, 23180)
con.cint <- c(1229, 622, 1287, 4581, 7719)
sin.cint
rbind(sin.cint,con.cint)
tabla1 <- rbind(sin.cint,con.cint)
tabla1
colnames(tabla1) <- c("grave", "menor", "minima", "no")
sin.cint <- c(13827,2642, 1871, 4840)
con.cint <- c(1229, 622, 1287, 4581)
tabla1 <- rbind(sin.cint,con.cint)
colnames(tabla1) <- c("grave", "menor", "minima", "no")
chisq.test(tabla1)
tabla2 <- rbind(borracho,normal)
borracho <- c(14691, 648, 1164, 4444)
tabla2 <- rbind(borracho,normal)
borracho <- c(14691, 648, 1164, 4444)
normal <- c(365, 2616, 1994, 4977)
tabla2 <- rbind(borracho,normal)
colnames(tabla2) <- c("grave", "menor", "minima", "no")
chisq.test(tabla2)
test1 <- chisq.test(tabla1)
test2 <- chisq.test(tabla2)
test1$residuals
test2$residuals
library(corrplot)
corrplot(test1$residuals,is.corr=FALSE)
library(readxl) ##Permite leer archivos xlsx
library(ggplot2) ##Paquete para confeccionar dibujos
library(ggrepel) ##Paquete que manipula etiquetas para gráficos
library(plotrix) ##Paquete para gráficos requerido para la libreria smacof
library(smacof)  ##Paquete para MDS basado en la minimización del stress
library(UsingR)
library(pgirmess)#pruebas a posteriori de kruskal wallis
library(MASS)
library(car)
S1=c(3.3,4.4,4.9,4.9,3.9,4.2,4.7,5.1,4.6,4.5)
S2=c(4.6,4.5,5.0,4.0,4.5,5.2,4.9,5.5,4.8,5.3)
S3=c(6.7,5.8,5.0,4.8,5.3,6.2,5.0,6.4,5.9,5.4)
S4=c(6.3,6.0,6.7,5.5,6.6,6.1,5.3,6.5,6.3,6.8)
supl=cbind(S1,S2,S3,S4)
efic=data.frame("Suplemento"=factor(c(rep(1,10),rep(2,10),rep(3,10),rep(4,10))),
"Eficiencia"=c(S1,S2,S3,S4))
efic
install.packages("ggrepel")
install.packages("plotrix")
install.packages("smacof")
install.packages("UsingR")
install.packages("pgirmess")
library(readxl) ##Permite leer archivos xlsx
library(ggplot2) ##Paquete para confeccionar dibujos
library(ggrepel) ##Paquete que manipula etiquetas para gráficos
library(plotrix) ##Paquete para gráficos requerido para la libreria smacof
library(smacof)  ##Paquete para MDS basado en la minimización del stress
library(UsingR)
library(pgirmess)#pruebas a posteriori de kruskal wallis
library(MASS)
library(car)
medias=apply(sup1,2,mean)
supl=cbind(S1,S2,S3,S4)
efic=data.frame("Suplemento"=factor(c(rep(1,10),rep(2,10),rep(3,10),rep(4,10))),
"Eficiencia"=c(S1,S2,S3,S4))
efic
medias=apply(sup1,2,mean)
medias=apply(supl,2,mean)
desvios=apply(supl,2,sd)
Resumen3=round(cbind(medias,desvios),3)
Resumen3
install.packages("MASS")
install.packages("car")
library(readxl) ##Permite leer archivos xlsx
library(ggplot2) ##Paquete para confeccionar dibujos
library(ggrepel) ##Paquete que manipula etiquetas para gráficos
library(plotrix) ##Paquete para gráficos requerido para la libreria smacof
library(smacof)  ##Paquete para MDS basado en la minimización del stress
library(UsingR)
library(pgirmess)#pruebas a posteriori de kruskal wallis
library(MASS)
library(car)
install.packages("colorspace")
GrupoA=c(25,36,36,25,36,16,25,36,49,36,25)
GrupoB=c(121,36,36,64,36,81,49,25,64,49,121)
GrupoC=c(81,81,36,9,25,36,9,49,169,1,81)
GrupoD=c(25,25,36,25,36,25,25,25,25,25,25)
Tiempos=cbind(GrupoA,GrupoB,GrupoC,GrupoD)
tiempo=data.frame("Grupos"=factor(c(rep(1,11),rep(2,11),rep(3,11),rep(4,11))),
"Tiempos"=c(GrupoA,GrupoB,GrupoC,GrupoD))
tiempo
medias= apply(Tiempos,2,mean)
desvios= apply(Tiempos,2,sd)
Resumen5= round(cbind(medias,desvios),3)
plot5= ggplot(Tiempos.aes(x=Grupos,y=Tiempos,fill=Grupos))
install.packages("ggplot2")
install.packages("ggplot")
plot5= ggplot(Tiempos.aes(x=Grupos,y=Tiempos,fill=Grupos))
plot5= ggplot(Tiempos.aes(x=Grupos,y=Tiempos,fill=Grupos))+
geom_boxplot()
library(ggplot)
library(ggplot2) ##Paquete para confeccionar dibujos
plot5= ggplot(Tiempos.aes(x=Grupos,y=Tiempos,fill=Grupos))+
geom_boxplot()
GrupoA=c(25,36,36,25,36,16,25,36,49,36,25)
GrupoB=c(121,36,36,64,36,81,49,25,64,49,121)
GrupoC=c(81,81,36,9,25,36,9,49,169,1,81)
GrupoD=c(25,25,36,25,36,25,25,25,25,25,25)
Tiempos=cbind(GrupoA,GrupoB,GrupoC,GrupoD)
tiempo=data.frame("Grupos"=factor(c(rep(1,11),rep(2,11),rep(3,11),rep(4,11))),
"Tiempos"=c(GrupoA,GrupoB,GrupoC,GrupoD))
tiempo
medias= apply(Tiempos,2,mean)
desvios= apply(Tiempos,2,sd)
Resumen5= round(cbind(medias,desvios),3)
plot5= ggplot(Tiempos.aes(x=Grupos,y=Tiempos,fill=Grupos))+
geom_boxplot()
plot5= ggplot(tiempo.aes(x=Grupos,y=Tiempos,fill=Grupos))+
geom_boxplot()
plot5= ggplot(tiempo,aes(x=Grupos,y=Tiempos,fill=Grupos))+
geom_boxplot()
plot5
source("C:/Users/usuario/Desktop/CURSOS_VARIOS/2_Maestría_Datos_UTN/2 AÑO/2-AMD-EcoFin/labo/src/lightgbm/531_lightgbm_default.r")
source("C:/Users/usuario/Desktop/CURSOS_VARIOS/2_Maestría_Datos_UTN/2 AÑO/2-AMD-EcoFin/labo/src/lightgbm/531_lightgbm_default.r")
source("C:/Users/usuario/Desktop/CURSOS_VARIOS/2_Maestría_Datos_UTN/2 AÑO/2-AMD-EcoFin/labo/src/lightgbm/531_lightgbm_default.r")
source("C:/Users/usuario/Desktop/CURSOS_VARIOS/2_Maestría_Datos_UTN/2 AÑO/2-AMD-EcoFin/labo/src/lightgbm/531_lightgbm_default.r")
